var searchIndex = {};
searchIndex['ears'] = {"items":[[0,"","ears","# ears"],[1,"Music","","Play Music easily."],[11,"al_source","","The internal OpenAL source identifier",0],[11,"al_buffers","","The internal OpenAL buffers",0],[11,"file","","The file open with libmscfile",0],[11,"file_infos","","Information of the file",0],[11,"sample_to_read","","Quantity of sample to read each time",0],[11,"sample_format","","Format of the sample",0],[11,"sound_tags","","Audio tags",0],[1,"Sound","","Play Sounds easily."],[11,"al_source","","The internal OpenAl source identifier",1],[11,"sound_data","","The SoundData associated to the Sound.",1],[1,"SoundData","","Samples extracted from a file."],[11,"sound_tags","","The SoundTags who contains all the information of the sound",2],[11,"snd_info","","The sndfile samples information",2],[11,"nb_sample","","The total samples count of the Sound",2],[11,"al_buffer","","The OpenAl internal identifier for the buffer",2],[1,"Tags","","Structure containing the tags of a sound."],[11,"title","","The title of the sound as a String",3],[11,"copyright","","The Copyright of the sound as a String",3],[11,"software","","The name of the software used to create the sound as a String",3],[11,"artist","","The name of the artist of the sound as a String",3],[11,"comment","","A comment as a String",3],[11,"date","","The creation date of the sound as a String",3],[11,"album","","The name of the album where the sound come from as a String",3],[11,"license","","The license of the sound as a String",3],[11,"trackNumber","","The tracknumber of the sound as a String",3],[11,"genre","","The genre of the sound as a String",3],[1,"Recorder","","Record audio"],[11,"ctxt","","",4],[11,"stop_sender","","",4],[11,"data_receiver","","",4],[11,"samples","","",4],[1,"RecordContext","","The context needed to initialize a new Recorder"],[11,"capt_device","","",5],[2,"State","","The differents states in which a sound can be."],[12,"Initial","","Initial state of the sound or music",6],[12,"Playing","","The sound or music is currently playing",6],[12,"Paused","","The sound or music is paused",6],[12,"Stopped","","The sound or music is stopped",6],[3,"init","","Initialize the internal context"],[3,"init_in","","Initialize the input device context"],[0,"listener","","Module for manage the listener in the scene."],[3,"set_volume","ears::listener","Set the global volume of the scene."],[3,"get_volume","","Get the global volume of the scene."],[3,"set_position","","Set the listener location in three dimensional space."],[3,"get_position","","Get the location of the listener in three dimensional space."],[3,"set_orientation","","Set the orientation of the listener."],[3,"get_orientation","","Get the orientation of the listener."],[6,"AudioController","ears","The functionnality that an Audio Source should provide."],[9,"play","","Play or resume the Audio Source.",7],[9,"pause","","Pause the Audio Source.",7],[9,"stop","","Stop the Audio Source.",7],[9,"is_playing","","Check if the Audio Source is playing or not.",7],[9,"get_state","","Get the current state of the Audio Source",7],[9,"set_volume","","Set the volume of the Audio Source.",7],[9,"get_volume","","Get the volume of the Audio Source.",7],[9,"set_min_volume","","Set the minimal volume for a Audio Source.",7],[9,"get_min_volume","","Get the minimal volume of the Audio Source.",7],[9,"set_max_volume","","Set the maximal volume for a Audio Source.",7],[9,"get_max_volume","","Get the maximal volume of the Audio Source.",7],[9,"set_looping","","Set the Audio Source looping or not",7],[9,"is_looping","","Check if the Audio Source is looping or not",7],[9,"set_pitch","","Set the pitch of the source.",7],[9,"get_pitch","","Set the pitch of the source.",7],[9,"set_relative","","Set the position of the Audio Source relative to the listener or absolute.",7],[9,"is_relative","","Is the Audio Source relative to the listener or not ?",7],[9,"set_position","","Set the Audio Source location in three dimensional space.",7],[9,"get_position","","Get the position of the Audio Source in three dimensional space.",7],[9,"set_direction","","Set the direction of the Audio Source.",7],[9,"get_direction","","Get the direction of the Audio Source.",7],[9,"set_max_distance","","Set the maximum distance of the Audio Source.",7],[9,"get_max_distance","","Get the maximum distance of the Audio Source.",7],[9,"set_reference_distance","","Set the reference distance of the Audio Source.",7],[9,"get_reference_distance","","Get the reference distance of the Audio Source.",7],[9,"set_attenuation","","Set the attenuation of a Audio Source.",7],[9,"get_attenuation","","Get the attenuation of a Sound.",7],[6,"AudioTags","","AudioTags trait implemented by all struct who can provides audio."],[9,"get_tags","","Get the tags of the audio source.",8]],"paths":[[1,"Music"],[1,"Sound"],[1,"SoundData"],[1,"Tags"],[1,"Recorder"],[1,"RecordContext"],[2,"State"],[6,"AudioController"],[6,"AudioTags"]]};
initSearch(searchIndex);
